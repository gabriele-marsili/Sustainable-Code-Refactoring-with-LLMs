=== RUN   TestMakeChain
    dominoes_test.go:24: PASS: empty input = empty output
makeChain([[1 1]], [])
makeChain([], [[1 1]])
isValid([[1 1]])=true
    dominoes_test.go:24: PASS: singleton input = singleton output
makeChain([[1 2]], [])
makeChain([], [[1 2]])
isValid([[1 2]])=false
makeChain([], [[2 1]])
isValid([[2 1]])=false
    dominoes_test.go:24: PASS: singleton that can't be chained
makeChain([[1 2] [3 1] [2 3]], [])
makeChain([[3 1] [2 3]], [[1 2]])
makeChain([[2 3]], [[1 2] [3 1]])
makeChain([[2 3]], [[1 2] [1 3]])
makeChain([[3 1]], [[1 2] [2 3]])
makeChain([], [[1 2] [2 3] [3 1]])
isValid([[1 2] [2 3] [3 1]])=true
    dominoes_test.go:24: PASS: three elements
makeChain([[1 2] [1 3] [2 3]], [])
makeChain([[1 3] [2 3]], [[1 2]])
makeChain([[2 3]], [[1 2] [1 3]])
makeChain([[2 3]], [[1 2] [3 1]])
makeChain([[1 3]], [[1 2] [2 3]])
makeChain([], [[1 2] [2 3] [1 3]])
isValid([[1 2] [2 3] [1 3]])=false
makeChain([], [[1 2] [2 3] [3 1]])
isValid([[1 2] [2 3] [3 1]])=true
    dominoes_test.go:24: PASS: can reverse dominoes
makeChain([[1 2] [4 1] [2 3]], [])
makeChain([[4 1] [2 3]], [[1 2]])
makeChain([[2 3]], [[1 2] [4 1]])
makeChain([[2 3]], [[1 2] [1 4]])
makeChain([[4 1]], [[1 2] [2 3]])
makeChain([], [[1 2] [2 3] [4 1]])
isValid([[1 2] [2 3] [4 1]])=false
makeChain([], [[1 2] [2 3] [1 4]])
isValid([[1 2] [2 3] [1 4]])=false
makeChain([[4 1]], [[1 2] [3 2]])
makeChain([[4 1] [2 3]], [[2 1]])
makeChain([[2 3]], [[2 1] [4 1]])
makeChain([[2 3]], [[2 1] [1 4]])
makeChain([], [[2 1] [1 4] [2 3]])
isValid([[2 1] [1 4] [2 3]])=false
makeChain([], [[2 1] [1 4] [3 2]])
isValid([[2 1] [1 4] [3 2]])=false
makeChain([[4 1]], [[2 1] [2 3]])
makeChain([[4 1]], [[2 1] [3 2]])
makeChain([[1 2] [2 3]], [[4 1]])
makeChain([[2 3]], [[4 1] [1 2]])
makeChain([], [[4 1] [1 2] [2 3]])
isValid([[4 1] [1 2] [2 3]])=false
makeChain([], [[4 1] [1 2] [3 2]])
isValid([[4 1] [1 2] [3 2]])=false
makeChain([[2 3]], [[4 1] [2 1]])
makeChain([[1 2]], [[4 1] [2 3]])
makeChain([[1 2]], [[4 1] [3 2]])
makeChain([[1 2] [2 3]], [[1 4]])
makeChain([[2 3]], [[1 4] [1 2]])
makeChain([[2 3]], [[1 4] [2 1]])
makeChain([[1 2]], [[1 4] [2 3]])
makeChain([[1 2]], [[1 4] [3 2]])
makeChain([[1 2] [4 1]], [[2 3]])
makeChain([[4 1]], [[2 3] [1 2]])
makeChain([[4 1]], [[2 3] [2 1]])
makeChain([[1 2]], [[2 3] [4 1]])
makeChain([[1 2]], [[2 3] [1 4]])
makeChain([[1 2] [4 1]], [[3 2]])
makeChain([[4 1]], [[3 2] [1 2]])
makeChain([[4 1]], [[3 2] [2 1]])
makeChain([], [[3 2] [2 1] [4 1]])
isValid([[3 2] [2 1] [4 1]])=false
makeChain([], [[3 2] [2 1] [1 4]])
isValid([[3 2] [2 1] [1 4]])=false
makeChain([[1 2]], [[3 2] [4 1]])
makeChain([[1 2]], [[3 2] [1 4]])
    dominoes_test.go:24: PASS: can't be chained
makeChain([[1 1] [2 2]], [])
makeChain([[2 2]], [[1 1]])
makeChain([], [[1 1] [2 2]])
isValid([[1 1] [2 2]])=false
makeChain([], [[1 1] [2 2]])
isValid([[1 1] [2 2]])=false
makeChain([[2 2]], [[1 1]])
makeChain([], [[1 1] [2 2]])
isValid([[1 1] [2 2]])=false
makeChain([], [[1 1] [2 2]])
isValid([[1 1] [2 2]])=false
makeChain([[1 1]], [[2 2]])
makeChain([], [[2 2] [1 1]])
isValid([[2 2] [1 1]])=false
makeChain([], [[2 2] [1 1]])
isValid([[2 2] [1 1]])=false
makeChain([[1 1]], [[2 2]])
makeChain([], [[2 2] [1 1]])
isValid([[2 2] [1 1]])=false
makeChain([], [[2 2] [1 1]])
isValid([[2 2] [1 1]])=false
    dominoes_test.go:24: PASS: disconnected - simple
makeChain([[1 2] [2 1] [3 4] [4 3]], [])
makeChain([[2 1] [3 4] [4 3]], [[1 2]])
makeChain([[3 4] [4 3]], [[1 2] [2 1]])
makeChain([[4 3]], [[1 2] [2 1] [3 4]])
makeChain([[4 3]], [[1 2] [2 1] [4 3]])
makeChain([[3 4]], [[1 2] [2 1] [4 3]])
makeChain([[3 4]], [[1 2] [2 1] [3 4]])
makeChain([[3 4] [4 3]], [[1 2] [1 2]])
makeChain([[2 1] [4 3]], [[1 2] [3 4]])
makeChain([[2 1] [4 3]], [[1 2] [4 3]])
makeChain([[2 1] [3 4]], [[1 2] [4 3]])
makeChain([[2 1] [3 4]], [[1 2] [3 4]])
makeChain([[2 1] [3 4] [4 3]], [[2 1]])
makeChain([[3 4] [4 3]], [[2 1] [2 1]])
makeChain([[3 4] [4 3]], [[2 1] [1 2]])
makeChain([[4 3]], [[2 1] [1 2] [3 4]])
makeChain([[4 3]], [[2 1] [1 2] [4 3]])
makeChain([[3 4]], [[2 1] [1 2] [4 3]])
makeChain([[3 4]], [[2 1] [1 2] [3 4]])
makeChain([[2 1] [4 3]], [[2 1] [3 4]])
makeChain([[2 1] [4 3]], [[2 1] [4 3]])
makeChain([[2 1] [3 4]], [[2 1] [4 3]])
makeChain([[2 1] [3 4]], [[2 1] [3 4]])
makeChain([[1 2] [3 4] [4 3]], [[2 1]])
makeChain([[3 4] [4 3]], [[2 1] [1 2]])
makeChain([[4 3]], [[2 1] [1 2] [3 4]])
makeChain([[4 3]], [[2 1] [1 2] [4 3]])
makeChain([[3 4]], [[2 1] [1 2] [4 3]])
makeChain([[3 4]], [[2 1] [1 2] [3 4]])
makeChain([[3 4] [4 3]], [[2 1] [2 1]])
makeChain([[1 2] [4 3]], [[2 1] [3 4]])
makeChain([[1 2] [4 3]], [[2 1] [4 3]])
makeChain([[1 2] [3 4]], [[2 1] [4 3]])
makeChain([[1 2] [3 4]], [[2 1] [3 4]])
makeChain([[1 2] [3 4] [4 3]], [[1 2]])
makeChain([[3 4] [4 3]], [[1 2] [1 2]])
makeChain([[3 4] [4 3]], [[1 2] [2 1]])
makeChain([[4 3]], [[1 2] [2 1] [3 4]])
makeChain([[4 3]], [[1 2] [2 1] [4 3]])
makeChain([[3 4]], [[1 2] [2 1] [4 3]])
makeChain([[3 4]], [[1 2] [2 1] [3 4]])
makeChain([[1 2] [4 3]], [[1 2] [3 4]])
makeChain([[1 2] [4 3]], [[1 2] [4 3]])
makeChain([[1 2] [3 4]], [[1 2] [4 3]])
makeChain([[1 2] [3 4]], [[1 2] [3 4]])
makeChain([[1 2] [2 1] [4 3]], [[3 4]])
makeChain([[2 1] [4 3]], [[3 4] [1 2]])
makeChain([[2 1] [4 3]], [[3 4] [2 1]])
makeChain([[1 2] [4 3]], [[3 4] [2 1]])
makeChain([[1 2] [4 3]], [[3 4] [1 2]])
makeChain([[1 2] [2 1]], [[3 4] [4 3]])
makeChain([[2 1]], [[3 4] [4 3] [1 2]])
makeChain([[2 1]], [[3 4] [4 3] [2 1]])
makeChain([[1 2]], [[3 4] [4 3] [2 1]])
makeChain([[1 2]], [[3 4] [4 3] [1 2]])
makeChain([[1 2] [2 1]], [[3 4] [3 4]])
makeChain([[1 2] [2 1] [4 3]], [[4 3]])
makeChain([[2 1] [4 3]], [[4 3] [1 2]])
makeChain([[2 1] [4 3]], [[4 3] [2 1]])
makeChain([[1 2] [4 3]], [[4 3] [2 1]])
makeChain([[1 2] [4 3]], [[4 3] [1 2]])
makeChain([[1 2] [2 1]], [[4 3] [4 3]])
makeChain([[1 2] [2 1]], [[4 3] [3 4]])
makeChain([[2 1]], [[4 3] [3 4] [1 2]])
makeChain([[2 1]], [[4 3] [3 4] [2 1]])
makeChain([[1 2]], [[4 3] [3 4] [2 1]])
makeChain([[1 2]], [[4 3] [3 4] [1 2]])
makeChain([[1 2] [2 1] [3 4]], [[4 3]])
makeChain([[2 1] [3 4]], [[4 3] [1 2]])
makeChain([[2 1] [3 4]], [[4 3] [2 1]])
makeChain([[1 2] [3 4]], [[4 3] [2 1]])
makeChain([[1 2] [3 4]], [[4 3] [1 2]])
makeChain([[1 2] [2 1]], [[4 3] [3 4]])
makeChain([[2 1]], [[4 3] [3 4] [1 2]])
makeChain([[2 1]], [[4 3] [3 4] [2 1]])
makeChain([[1 2]], [[4 3] [3 4] [2 1]])
makeChain([[1 2]], [[4 3] [3 4] [1 2]])
makeChain([[1 2] [2 1]], [[4 3] [4 3]])
makeChain([[1 2] [2 1] [3 4]], [[3 4]])
makeChain([[2 1] [3 4]], [[3 4] [1 2]])
makeChain([[2 1] [3 4]], [[3 4] [2 1]])
makeChain([[1 2] [3 4]], [[3 4] [2 1]])
makeChain([[1 2] [3 4]], [[3 4] [1 2]])
makeChain([[1 2] [2 1]], [[3 4] [3 4]])
makeChain([[1 2] [2 1]], [[3 4] [4 3]])
makeChain([[2 1]], [[3 4] [4 3] [1 2]])
makeChain([[2 1]], [[3 4] [4 3] [2 1]])
makeChain([[1 2]], [[3 4] [4 3] [2 1]])
makeChain([[1 2]], [[3 4] [4 3] [1 2]])
    dominoes_test.go:24: PASS: disconnected - double loop
makeChain([[1 2] [2 3] [3 1] [4 4]], [])
makeChain([[2 3] [3 1] [4 4]], [[1 2]])
makeChain([[3 1] [4 4]], [[1 2] [2 3]])
makeChain([[4 4]], [[1 2] [2 3] [3 1]])
makeChain([], [[1 2] [2 3] [3 1] [4 4]])
isValid([[1 2] [2 3] [3 1] [4 4]])=false
makeChain([], [[1 2] [2 3] [3 1] [4 4]])
isValid([[1 2] [2 3] [3 1] [4 4]])=false
makeChain([[4 4]], [[1 2] [2 3] [1 3]])
makeChain([[3 1]], [[1 2] [2 3] [4 4]])
makeChain([[3 1]], [[1 2] [2 3] [4 4]])
makeChain([[3 1] [4 4]], [[1 2] [3 2]])
makeChain([[2 3] [4 4]], [[1 2] [3 1]])
makeChain([[2 3] [4 4]], [[1 2] [1 3]])
makeChain([[2 3] [3 1]], [[1 2] [4 4]])
makeChain([[2 3] [3 1]], [[1 2] [4 4]])
makeChain([[2 3] [3 1] [4 4]], [[2 1]])
makeChain([[3 1] [4 4]], [[2 1] [2 3]])
makeChain([[3 1] [4 4]], [[2 1] [3 2]])
makeChain([[2 3] [4 4]], [[2 1] [3 1]])
makeChain([[2 3] [4 4]], [[2 1] [1 3]])
makeChain([[4 4]], [[2 1] [1 3] [2 3]])
makeChain([[4 4]], [[2 1] [1 3] [3 2]])
makeChain([], [[2 1] [1 3] [3 2] [4 4]])
isValid([[2 1] [1 3] [3 2] [4 4]])=false
makeChain([], [[2 1] [1 3] [3 2] [4 4]])
isValid([[2 1] [1 3] [3 2] [4 4]])=false
makeChain([[2 3]], [[2 1] [1 3] [4 4]])
makeChain([[2 3]], [[2 1] [1 3] [4 4]])
makeChain([[2 3] [3 1]], [[2 1] [4 4]])
makeChain([[2 3] [3 1]], [[2 1] [4 4]])
makeChain([[1 2] [3 1] [4 4]], [[2 3]])
makeChain([[3 1] [4 4]], [[2 3] [1 2]])
makeChain([[3 1] [4 4]], [[2 3] [2 1]])
makeChain([[1 2] [4 4]], [[2 3] [3 1]])
makeChain([[4 4]], [[2 3] [3 1] [1 2]])
makeChain([], [[2 3] [3 1] [1 2] [4 4]])
isValid([[2 3] [3 1] [1 2] [4 4]])=false
makeChain([], [[2 3] [3 1] [1 2] [4 4]])
isValid([[2 3] [3 1] [1 2] [4 4]])=false
makeChain([[4 4]], [[2 3] [3 1] [2 1]])
makeChain([[1 2]], [[2 3] [3 1] [4 4]])
makeChain([[1 2]], [[2 3] [3 1] [4 4]])
makeChain([[1 2] [4 4]], [[2 3] [1 3]])
makeChain([[1 2] [3 1]], [[2 3] [4 4]])
makeChain([[1 2] [3 1]], [[2 3] [4 4]])
makeChain([[1 2] [3 1] [4 4]], [[3 2]])
makeChain([[3 1] [4 4]], [[3 2] [1 2]])
makeChain([[3 1] [4 4]], [[3 2] [2 1]])
makeChain([[4 4]], [[3 2] [2 1] [3 1]])
makeChain([[4 4]], [[3 2] [2 1] [1 3]])
makeChain([], [[3 2] [2 1] [1 3] [4 4]])
isValid([[3 2] [2 1] [1 3] [4 4]])=false
makeChain([], [[3 2] [2 1] [1 3] [4 4]])
isValid([[3 2] [2 1] [1 3] [4 4]])=false
makeChain([[3 1]], [[3 2] [2 1] [4 4]])
makeChain([[3 1]], [[3 2] [2 1] [4 4]])
makeChain([[1 2] [4 4]], [[3 2] [3 1]])
makeChain([[1 2] [4 4]], [[3 2] [1 3]])
makeChain([[1 2] [3 1]], [[3 2] [4 4]])
makeChain([[1 2] [3 1]], [[3 2] [4 4]])
makeChain([[1 2] [2 3] [4 4]], [[3 1]])
makeChain([[2 3] [4 4]], [[3 1] [1 2]])
makeChain([[4 4]], [[3 1] [1 2] [2 3]])
makeChain([], [[3 1] [1 2] [2 3] [4 4]])
isValid([[3 1] [1 2] [2 3] [4 4]])=false
makeChain([], [[3 1] [1 2] [2 3] [4 4]])
isValid([[3 1] [1 2] [2 3] [4 4]])=false
makeChain([[4 4]], [[3 1] [1 2] [3 2]])
makeChain([[2 3]], [[3 1] [1 2] [4 4]])
makeChain([[2 3]], [[3 1] [1 2] [4 4]])
makeChain([[2 3] [4 4]], [[3 1] [2 1]])
makeChain([[1 2] [4 4]], [[3 1] [2 3]])
makeChain([[1 2] [4 4]], [[3 1] [3 2]])
makeChain([[1 2] [2 3]], [[3 1] [4 4]])
makeChain([[1 2] [2 3]], [[3 1] [4 4]])
makeChain([[1 2] [2 3] [4 4]], [[1 3]])
makeChain([[2 3] [4 4]], [[1 3] [1 2]])
makeChain([[2 3] [4 4]], [[1 3] [2 1]])
makeChain([[1 2] [4 4]], [[1 3] [2 3]])
makeChain([[1 2] [4 4]], [[1 3] [3 2]])
makeChain([[4 4]], [[1 3] [3 2] [1 2]])
makeChain([[4 4]], [[1 3] [3 2] [2 1]])
makeChain([], [[1 3] [3 2] [2 1] [4 4]])
isValid([[1 3] [3 2] [2 1] [4 4]])=false
makeChain([], [[1 3] [3 2] [2 1] [4 4]])
isValid([[1 3] [3 2] [2 1] [4 4]])=false
makeChain([[1 2]], [[1 3] [3 2] [4 4]])
makeChain([[1 2]], [[1 3] [3 2] [4 4]])
makeChain([[1 2] [2 3]], [[1 3] [4 4]])
makeChain([[1 2] [2 3]], [[1 3] [4 4]])
makeChain([[1 2] [2 3] [3 1]], [[4 4]])
makeChain([[2 3] [3 1]], [[4 4] [1 2]])
makeChain([[2 3] [3 1]], [[4 4] [2 1]])
makeChain([[1 2] [3 1]], [[4 4] [2 3]])
makeChain([[1 2] [3 1]], [[4 4] [3 2]])
makeChain([[1 2] [2 3]], [[4 4] [3 1]])
makeChain([[1 2] [2 3]], [[4 4] [1 3]])
makeChain([[1 2] [2 3] [3 1]], [[4 4]])
makeChain([[2 3] [3 1]], [[4 4] [1 2]])
makeChain([[2 3] [3 1]], [[4 4] [2 1]])
makeChain([[1 2] [3 1]], [[4 4] [2 3]])
makeChain([[1 2] [3 1]], [[4 4] [3 2]])
makeChain([[1 2] [2 3]], [[4 4] [3 1]])
makeChain([[1 2] [2 3]], [[4 4] [1 3]])
    dominoes_test.go:24: PASS: disconnected - single isolated
makeChain([[1 2] [2 3] [3 1] [2 4] [2 4]], [])
makeChain([[2 3] [3 1] [2 4] [2 4]], [[1 2]])
makeChain([[3 1] [2 4] [2 4]], [[1 2] [2 3]])
makeChain([[2 4] [2 4]], [[1 2] [2 3] [3 1]])
makeChain([[2 4]], [[1 2] [2 3] [3 1] [2 4]])
makeChain([[2 4]], [[1 2] [2 3] [3 1] [4 2]])
makeChain([[2 4]], [[1 2] [2 3] [3 1] [2 4]])
makeChain([[2 4]], [[1 2] [2 3] [3 1] [4 2]])
makeChain([[2 4] [2 4]], [[1 2] [2 3] [1 3]])
makeChain([[3 1] [2 4]], [[1 2] [2 3] [2 4]])
makeChain([[3 1] [2 4]], [[1 2] [2 3] [4 2]])
makeChain([[3 1] [2 4]], [[1 2] [2 3] [2 4]])
makeChain([[3 1] [2 4]], [[1 2] [2 3] [4 2]])
makeChain([[3 1] [2 4] [2 4]], [[1 2] [3 2]])
makeChain([[2 3] [2 4] [2 4]], [[1 2] [3 1]])
makeChain([[2 3] [2 4] [2 4]], [[1 2] [1 3]])
makeChain([[2 3] [3 1] [2 4]], [[1 2] [2 4]])
makeChain([[3 1] [2 4]], [[1 2] [2 4] [2 3]])
makeChain([[3 1] [2 4]], [[1 2] [2 4] [3 2]])
makeChain([[2 3] [2 4]], [[1 2] [2 4] [3 1]])
makeChain([[2 3] [2 4]], [[1 2] [2 4] [1 3]])
makeChain([[2 3] [3 1]], [[1 2] [2 4] [2 4]])
makeChain([[2 3] [3 1]], [[1 2] [2 4] [4 2]])
makeChain([[3 1]], [[1 2] [2 4] [4 2] [2 3]])
makeChain([], [[1 2] [2 4] [4 2] [2 3] [3 1]])
isValid([[1 2] [2 4] [4 2] [2 3] [3 1]])=true
    dominoes_test.go:24: PASS: need backtrack
makeChain([[1 2] [2 3] [3 1] [1 1] [2 2] [3 3]], [])
makeChain([[2 3] [3 1] [1 1] [2 2] [3 3]], [[1 2]])
makeChain([[3 1] [1 1] [2 2] [3 3]], [[1 2] [2 3]])
makeChain([[1 1] [2 2] [3 3]], [[1 2] [2 3] [3 1]])
makeChain([[2 2] [3 3]], [[1 2] [2 3] [3 1] [1 1]])
makeChain([[3 3]], [[1 2] [2 3] [3 1] [1 1] [2 2]])
makeChain([[3 3]], [[1 2] [2 3] [3 1] [1 1] [2 2]])
makeChain([[2 2]], [[1 2] [2 3] [3 1] [1 1] [3 3]])
makeChain([[2 2]], [[1 2] [2 3] [3 1] [1 1] [3 3]])
makeChain([[2 2] [3 3]], [[1 2] [2 3] [3 1] [1 1]])
makeChain([[3 3]], [[1 2] [2 3] [3 1] [1 1] [2 2]])
makeChain([[3 3]], [[1 2] [2 3] [3 1] [1 1] [2 2]])
makeChain([[2 2]], [[1 2] [2 3] [3 1] [1 1] [3 3]])
makeChain([[2 2]], [[1 2] [2 3] [3 1] [1 1] [3 3]])
makeChain([[1 1] [3 3]], [[1 2] [2 3] [3 1] [2 2]])
makeChain([[1 1] [3 3]], [[1 2] [2 3] [3 1] [2 2]])
makeChain([[1 1] [2 2]], [[1 2] [2 3] [3 1] [3 3]])
makeChain([[1 1] [2 2]], [[1 2] [2 3] [3 1] [3 3]])
makeChain([[1 1] [2 2] [3 3]], [[1 2] [2 3] [1 3]])
makeChain([[3 1] [2 2] [3 3]], [[1 2] [2 3] [1 1]])
makeChain([[3 1] [2 2] [3 3]], [[1 2] [2 3] [1 1]])
makeChain([[3 1] [1 1] [3 3]], [[1 2] [2 3] [2 2]])
makeChain([[3 1] [1 1] [3 3]], [[1 2] [2 3] [2 2]])
makeChain([[3 1] [1 1] [2 2]], [[1 2] [2 3] [3 3]])
makeChain([[1 1] [2 2]], [[1 2] [2 3] [3 3] [3 1]])
makeChain([[2 2]], [[1 2] [2 3] [3 3] [3 1] [1 1]])
makeChain([], [[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])
isValid([[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])=false
makeChain([], [[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])
isValid([[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])=false
makeChain([[2 2]], [[1 2] [2 3] [3 3] [3 1] [1 1]])
makeChain([], [[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])
isValid([[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])=false
makeChain([], [[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])
isValid([[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])=false
makeChain([[1 1]], [[1 2] [2 3] [3 3] [3 1] [2 2]])
makeChain([[1 1]], [[1 2] [2 3] [3 3] [3 1] [2 2]])
makeChain([[1 1] [2 2]], [[1 2] [2 3] [3 3] [1 3]])
makeChain([[3 1] [2 2]], [[1 2] [2 3] [3 3] [1 1]])
makeChain([[3 1] [2 2]], [[1 2] [2 3] [3 3] [1 1]])
makeChain([[3 1] [1 1]], [[1 2] [2 3] [3 3] [2 2]])
makeChain([[3 1] [1 1]], [[1 2] [2 3] [3 3] [2 2]])
makeChain([[3 1] [1 1] [2 2]], [[1 2] [2 3] [3 3]])
makeChain([[1 1] [2 2]], [[1 2] [2 3] [3 3] [3 1]])
makeChain([[2 2]], [[1 2] [2 3] [3 3] [3 1] [1 1]])
makeChain([], [[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])
isValid([[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])=false
makeChain([], [[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])
isValid([[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])=false
makeChain([[2 2]], [[1 2] [2 3] [3 3] [3 1] [1 1]])
makeChain([], [[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])
isValid([[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])=false
makeChain([], [[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])
isValid([[1 2] [2 3] [3 3] [3 1] [1 1] [2 2]])=false
makeChain([[1 1]], [[1 2] [2 3] [3 3] [3 1] [2 2]])
makeChain([[1 1]], [[1 2] [2 3] [3 3] [3 1] [2 2]])
makeChain([[1 1] [2 2]], [[1 2] [2 3] [3 3] [1 3]])
makeChain([[3 1] [2 2]], [[1 2] [2 3] [3 3] [1 1]])
makeChain([[3 1] [2 2]], [[1 2] [2 3] [3 3] [1 1]])
makeChain([[3 1] [1 1]], [[1 2] [2 3] [3 3] [2 2]])
makeChain([[3 1] [1 1]], [[1 2] [2 3] [3 3] [2 2]])
makeChain([[3 1] [1 1] [2 2] [3 3]], [[1 2] [3 2]])
makeChain([[2 3] [1 1] [2 2] [3 3]], [[1 2] [3 1]])
makeChain([[2 3] [1 1] [2 2] [3 3]], [[1 2] [1 3]])
makeChain([[2 3] [3 1] [2 2] [3 3]], [[1 2] [1 1]])
makeChain([[2 3] [3 1] [2 2] [3 3]], [[1 2] [1 1]])
makeChain([[2 3] [3 1] [1 1] [3 3]], [[1 2] [2 2]])
makeChain([[3 1] [1 1] [3 3]], [[1 2] [2 2] [2 3]])
makeChain([[1 1] [3 3]], [[1 2] [2 2] [2 3] [3 1]])
makeChain([[3 3]], [[1 2] [2 2] [2 3] [3 1] [1 1]])
makeChain([], [[1 2] [2 2] [2 3] [3 1] [1 1] [3 3]])
isValid([[1 2] [2 2] [2 3] [3 1] [1 1] [3 3]])=false
makeChain([], [[1 2] [2 2] [2 3] [3 1] [1 1] [3 3]])
isValid([[1 2] [2 2] [2 3] [3 1] [1 1] [3 3]])=false
makeChain([[3 3]], [[1 2] [2 2] [2 3] [3 1] [1 1]])
makeChain([], [[1 2] [2 2] [2 3] [3 1] [1 1] [3 3]])
isValid([[1 2] [2 2] [2 3] [3 1] [1 1] [3 3]])=false
makeChain([], [[1 2] [2 2] [2 3] [3 1] [1 1] [3 3]])
isValid([[1 2] [2 2] [2 3] [3 1] [1 1] [3 3]])=false
makeChain([[1 1]], [[1 2] [2 2] [2 3] [3 1] [3 3]])
makeChain([[1 1]], [[1 2] [2 2] [2 3] [3 1] [3 3]])
makeChain([[1 1] [3 3]], [[1 2] [2 2] [2 3] [1 3]])
makeChain([[3 1] [3 3]], [[1 2] [2 2] [2 3] [1 1]])
makeChain([[3 1] [3 3]], [[1 2] [2 2] [2 3] [1 1]])
makeChain([[3 1] [1 1]], [[1 2] [2 2] [2 3] [3 3]])
makeChain([[1 1]], [[1 2] [2 2] [2 3] [3 3] [3 1]])
makeChain([], [[1 2] [2 2] [2 3] [3 3] [3 1] [1 1]])
isValid([[1 2] [2 2] [2 3] [3 3] [3 1] [1 1]])=true
    dominoes_test.go:24: PASS: separate loops
makeChain([[1 2] [5 3] [3 1] [1 2] [2 4] [1 6] [2 3] [3 4] [5 6]], [])
makeChain([[5 3] [3 1] [1 2] [2 4] [1 6] [2 3] [3 4] [5 6]], [[1 2]])
makeChain([[3 1] [1 2] [2 4] [1 6] [2 3] [3 4] [5 6]], [[1 2] [5 3]])
makeChain([[3 1] [1 2] [2 4] [1 6] [2 3] [3 4] [5 6]], [[1 2] [3 5]])
makeChain([[5 3] [1 2] [2 4] [1 6] [2 3] [3 4] [5 6]], [[1 2] [3 1]])
makeChain([[5 3] [1 2] [2 4] [1 6] [2 3] [3 4] [5 6]], [[1 2] [1 3]])
makeChain([[5 3] [3 1] [2 4] [1 6] [2 3] [3 4] [5 6]], [[1 2] [1 2]])
makeChain([[5 3] [3 1] [2 4] [1 6] [2 3] [3 4] [5 6]], [[1 2] [2 1]])
makeChain([[3 1] [2 4] [1 6] [2 3] [3 4] [5 6]], [[1 2] [2 1] [5 3]])
makeChain([[3 1] [2 4] [1 6] [2 3] [3 4] [5 6]], [[1 2] [2 1] [3 5]])
makeChain([[5 3] [2 4] [1 6] [2 3] [3 4] [5 6]], [[1 2] [2 1] [3 1]])
makeChain([[5 3] [2 4] [1 6] [2 3] [3 4] [5 6]], [[1 2] [2 1] [1 3]])
makeChain([[2 4] [1 6] [2 3] [3 4] [5 6]], [[1 2] [2 1] [1 3] [5 3]])
makeChain([[2 4] [1 6] [2 3] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 5]])
makeChain([[1 6] [2 3] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 5] [2 4]])
makeChain([[1 6] [2 3] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 5] [4 2]])
makeChain([[2 4] [2 3] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 5] [1 6]])
makeChain([[2 4] [2 3] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 5] [6 1]])
makeChain([[2 4] [1 6] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 5] [2 3]])
makeChain([[2 4] [1 6] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 5] [3 2]])
makeChain([[2 4] [1 6] [2 3] [5 6]], [[1 2] [2 1] [1 3] [3 5] [3 4]])
makeChain([[2 4] [1 6] [2 3] [5 6]], [[1 2] [2 1] [1 3] [3 5] [4 3]])
makeChain([[2 4] [1 6] [2 3] [3 4]], [[1 2] [2 1] [1 3] [3 5] [5 6]])
makeChain([[1 6] [2 3] [3 4]], [[1 2] [2 1] [1 3] [3 5] [5 6] [2 4]])
makeChain([[1 6] [2 3] [3 4]], [[1 2] [2 1] [1 3] [3 5] [5 6] [4 2]])
makeChain([[2 4] [2 3] [3 4]], [[1 2] [2 1] [1 3] [3 5] [5 6] [1 6]])
makeChain([[2 4] [2 3] [3 4]], [[1 2] [2 1] [1 3] [3 5] [5 6] [6 1]])
makeChain([[2 3] [3 4]], [[1 2] [2 1] [1 3] [3 5] [5 6] [6 1] [2 4]])
makeChain([[2 3] [3 4]], [[1 2] [2 1] [1 3] [3 5] [5 6] [6 1] [4 2]])
makeChain([[2 4] [3 4]], [[1 2] [2 1] [1 3] [3 5] [5 6] [6 1] [2 3]])
makeChain([[2 4] [3 4]], [[1 2] [2 1] [1 3] [3 5] [5 6] [6 1] [3 2]])
makeChain([[2 4] [2 3]], [[1 2] [2 1] [1 3] [3 5] [5 6] [6 1] [3 4]])
makeChain([[2 4] [2 3]], [[1 2] [2 1] [1 3] [3 5] [5 6] [6 1] [4 3]])
makeChain([[2 4] [1 6] [3 4]], [[1 2] [2 1] [1 3] [3 5] [5 6] [2 3]])
makeChain([[2 4] [1 6] [3 4]], [[1 2] [2 1] [1 3] [3 5] [5 6] [3 2]])
makeChain([[2 4] [1 6] [2 3]], [[1 2] [2 1] [1 3] [3 5] [5 6] [3 4]])
makeChain([[2 4] [1 6] [2 3]], [[1 2] [2 1] [1 3] [3 5] [5 6] [4 3]])
makeChain([[2 4] [1 6] [2 3] [3 4]], [[1 2] [2 1] [1 3] [3 5] [6 5]])
makeChain([[5 3] [1 6] [2 3] [3 4] [5 6]], [[1 2] [2 1] [1 3] [2 4]])
makeChain([[5 3] [1 6] [2 3] [3 4] [5 6]], [[1 2] [2 1] [1 3] [4 2]])
makeChain([[5 3] [2 4] [2 3] [3 4] [5 6]], [[1 2] [2 1] [1 3] [1 6]])
makeChain([[5 3] [2 4] [2 3] [3 4] [5 6]], [[1 2] [2 1] [1 3] [6 1]])
makeChain([[5 3] [2 4] [1 6] [3 4] [5 6]], [[1 2] [2 1] [1 3] [2 3]])
makeChain([[5 3] [2 4] [1 6] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 2]])
makeChain([[2 4] [1 6] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 2] [5 3]])
makeChain([[2 4] [1 6] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 2] [3 5]])
makeChain([[5 3] [1 6] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 2] [2 4]])
makeChain([[1 6] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 2] [2 4] [5 3]])
makeChain([[1 6] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 2] [2 4] [3 5]])
makeChain([[5 3] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 2] [2 4] [1 6]])
makeChain([[5 3] [3 4] [5 6]], [[1 2] [2 1] [1 3] [3 2] [2 4] [6 1]])
makeChain([[5 3] [1 6] [5 6]], [[1 2] [2 1] [1 3] [3 2] [2 4] [3 4]])
makeChain([[5 3] [1 6] [5 6]], [[1 2] [2 1] [1 3] [3 2] [2 4] [4 3]])
makeChain([[1 6] [5 6]], [[1 2] [2 1] [1 3] [3 2] [2 4] [4 3] [5 3]])
makeChain([[1 6] [5 6]], [[1 2] [2 1] [1 3] [3 2] [2 4] [4 3] [3 5]])
makeChain([[5 6]], [[1 2] [2 1] [1 3] [3 2] [2 4] [4 3] [3 5] [1 6]])
makeChain([[5 6]], [[1 2] [2 1] [1 3] [3 2] [2 4] [4 3] [3 5] [6 1]])
makeChain([[1 6]], [[1 2] [2 1] [1 3] [3 2] [2 4] [4 3] [3 5] [5 6]])
makeChain([], [[1 2] [2 1] [1 3] [3 2] [2 4] [4 3] [3 5] [5 6] [1 6]])
isValid([[1 2] [2 1] [1 3] [3 2] [2 4] [4 3] [3 5] [5 6] [1 6]])=false
makeChain([], [[1 2] [2 1] [1 3] [3 2] [2 4] [4 3] [3 5] [5 6] [6 1]])
isValid([[1 2] [2 1] [1 3] [3 2] [2 4] [4 3] [3 5] [5 6] [6 1]])=true
    dominoes_test.go:24: PASS: nine elements
--- PASS: TestMakeChain (0.03s)
PASS
ok  	esercizio	0.028s
	Command being timed: "go test -v"
	User time (seconds): 5.22
	System time (seconds): 0.60
	Percent of CPU this job got: 65%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:08.90
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 212988
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 5
	Minor (reclaiming a frame) page faults: 721258
	Voluntary context switches: 22193
	Involuntary context switches: 19799
	Swaps: 0
	File system inputs: 3336
	File system outputs: 172256
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0

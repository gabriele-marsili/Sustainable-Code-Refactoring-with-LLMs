=== RUN   TestCalculateWorkingCarsPerHour
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerHour (0.01s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate (0.00s)
=== RUN   TestCalculateWorkingCarsPerMinute
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerMinute (0.01s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate (0.00s)
=== RUN   TestCalculateCost
=== RUN   TestCalculateCost/calculate_cost_to_produce_0_cars
=== RUN   TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car
=== RUN   TestCalculateCost/calculate_cost_to_produce_2_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_9_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_10_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_100_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_21_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_37_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_56_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_148_cars
--- PASS: TestCalculateCost (0.02s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_0_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_2_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_9_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_10_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_100_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_21_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_37_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_56_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_148_cars (0.00s)
PASS
ok  	esercizio	0.072s
	Command being timed: "go test -v"
	User time (seconds): 23.91
	System time (seconds): 49.18
	Percent of CPU this job got: 47%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.41
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 200484
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 4
	Minor (reclaiming a frame) page faults: 713768
	Voluntary context switches: 33688
	Involuntary context switches: 44101
	Swaps: 0
	File system inputs: 0
	File system outputs: 171768
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0

(node:23) ExperimentalWarning: VM Modules is an experimental feature and might change at any time
(Use `node --trace-warnings ...` to show where the warning was created)
FAIL ./high-score-board_testSuite.js
  createScoreBoard
    ✓ creates a new board with a test entry (1 ms)
  addPlayer
    ✓ adds a player and score to the board
    ✕ returns the existing score board
  removePlayer
    ✕ removes a player from the score board
    ✕ does nothing if the player is not on the board
  updateScore
    ✕ increases a player's score (1 ms)
  applyMondayBonus
    ✕ adds 100 points for all players (1 ms)
    ✕ does nothing if the score board is empty
  normalizeScore
    ✓ applies the normalization function
    ✓ works for different params

  ● addPlayer › returns the existing score board

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      37 |     // This follows the suggestion from the Jest docs to avoid a confusing test report
      38 |     // https://jestjs.io/docs/expect#tobevalue
    > 39 |     expect(Object.is(actual, scoreBoard)).toBe(true);
         |                                           ^
      40 |   });
      41 | });
      42 |

      at Object.<anonymous> (high-score-board_testSuite.js:39:43)

  ● removePlayer › removes a player from the score board

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      56 |     const actual = removePlayer(scoreBoard, 'Jesse Johnson');
      57 |     expect(actual).toEqual(expected);
    > 58 |     expect(Object.is(actual, scoreBoard)).toBe(true);
         |                                           ^
      59 |   });
      60 |
      61 |   test('does nothing if the player is not on the board', () => {

      at Object.<anonymous> (high-score-board_testSuite.js:58:43)

  ● removePlayer › does nothing if the player is not on the board

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      68 |     const actual = removePlayer(scoreBoard, 'Bruno Santangelo');
      69 |     expect(actual).toEqual(scoreBoard);
    > 70 |     expect(Object.is(actual, scoreBoard)).toBe(true);
         |                                           ^
      71 |   });
      72 | });
      73 |

      at Object.<anonymous> (high-score-board_testSuite.js:70:43)

  ● updateScore › increases a player's score

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

      Object {
        "Amil Pastorius": 99373,
        "Jesse Johnson": 2674,
    -   "Min-seo Shin": 1999,
    +   "Min-seo Shin": 0,
      }

      88 |     updateScore(scoreBoard, 'Min-seo Shin', 1999);
      89 |     const actual = updateScore(scoreBoard, 'Jesse Johnson', 1337);
    > 90 |     expect(actual).toEqual(expected);
         |                    ^
      91 |     expect(Object.is(actual, scoreBoard)).toBe(true);
      92 |   });
      93 | });

      at Object.<anonymous> (high-score-board_testSuite.js:90:20)

  ● applyMondayBonus › adds 100 points for all players

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      109 |     const actual = applyMondayBonus(scoreBoard);
      110 |     expect(actual).toEqual(expected);
    > 111 |     expect(Object.is(actual, scoreBoard)).toBe(true);
          |                                           ^
      112 |   });
      113 |
      114 |   test('does nothing if the score board is empty', () => {

      at Object.<anonymous> (high-score-board_testSuite.js:111:43)

  ● applyMondayBonus › does nothing if the score board is empty

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      116 |     const actual = applyMondayBonus(scoreBoard);
      117 |     expect(actual).toEqual({});
    > 118 |     expect(Object.is(actual, scoreBoard)).toBe(true);
          |                                           ^
      119 |   });
      120 | });
      121 |

      at Object.<anonymous> (high-score-board_testSuite.js:118:43)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 4 passed, 10 total
Snapshots:   0 total
Time:        0.183 s
Ran all test suites.
Command exited with non-zero status 1
	Command being timed: "node --experimental-vm-modules ./node_modules/.bin/jest --config=jest.config.js --testMatch=**/*testSuite.js --silent=false"
	User time (seconds): 0.23
	System time (seconds): 0.08
	Percent of CPU this job got: 66%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.47
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 83336
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 14435
	Voluntary context switches: 7020
	Involuntary context switches: 230
	Swaps: 0
	File system inputs: 0
	File system outputs: 16
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 1

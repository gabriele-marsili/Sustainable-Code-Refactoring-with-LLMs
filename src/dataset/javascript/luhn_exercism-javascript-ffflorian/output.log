(node:23) ExperimentalWarning: VM Modules is an experimental feature and might change at any time
(Use `node --trace-warnings ...` to show where the warning was created)
FAIL ./luhn_testSuite.js
  Luhn
    ✓ single digit strings can not be valid (2 ms)
    ✓ a single zero is invalid
    ✓ a simple valid SIN that remains valid if reversed
    ✕ a simple valid SIN that becomes invalid if reversed (2 ms)
    ✓ a valid Canadian SIN
    ✓ invalid Canadian SIN
    ✓ invalid credit card
    ✓ invalid long number with an even remainder
    ✕ valid number with an even number of digits (1 ms)
    ✕ valid number with an odd number of spaces
    ✓ valid strings with a non-digit added at the end invalid
    ✓ valid strings with punctuation included become invalid
    ✓ valid strings with symbols included become invalid
    ✓ single zero with space is invalid (1 ms)
    ✓ more than a single zero is valid
    ✓ input digit 9 is correctly converted to output digit 9
    ✓ using ascii value for non-doubled non-digit isn't allowed
    ✓ using ascii value for doubled non-digit isn't allowed

  ● Luhn › a simple valid SIN that becomes invalid if reversed

    expect(received).toEqual(expected) // deep equality

    Expected: true
    Received: false

      15 |
      16 |   test('a simple valid SIN that becomes invalid if reversed', () => {
    > 17 |     expect(valid('59')).toEqual(true);
         |                         ^
      18 |   });
      19 |
      20 |   test('a valid Canadian SIN', () => {

      at Object.<anonymous> (luhn_testSuite.js:17:25)

  ● Luhn › valid number with an even number of digits

    expect(received).toEqual(expected) // deep equality

    Expected: true
    Received: false

      35 |
      36 |   test('valid number with an even number of digits', () => {
    > 37 |     expect(valid('095 245 88')).toEqual(true);
         |                                 ^
      38 |   });
      39 |
      40 |   test('valid number with an odd number of spaces', () => {

      at Object.<anonymous> (luhn_testSuite.js:37:33)

  ● Luhn › valid number with an odd number of spaces

    expect(received).toEqual(expected) // deep equality

    Expected: true
    Received: false

      39 |
      40 |   test('valid number with an odd number of spaces', () => {
    > 41 |     expect(valid('234 567 891 234')).toEqual(true);
         |                                      ^
      42 |   });
      43 |
      44 |   test('valid strings with a non-digit added at the end invalid', () => {

      at Object.<anonymous> (luhn_testSuite.js:41:38)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 15 passed, 18 total
Snapshots:   0 total
Time:        1.807 s
Ran all test suites.
Command exited with non-zero status 1
	Command being timed: "node --experimental-vm-modules ./node_modules/.bin/jest --config=jest.config.js --testMatch=**/*testSuite.js --silent=false"
	User time (seconds): 0.30
	System time (seconds): 0.05
	Percent of CPU this job got: 6%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:05.97
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 82868
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 14308
	Voluntary context switches: 7785
	Involuntary context switches: 2636
	Swaps: 0
	File system inputs: 48
	File system outputs: 16
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 1

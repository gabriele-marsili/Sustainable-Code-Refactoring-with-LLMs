
Thanks for using JUnit! Support its development at https://junit.org/sponsoring

[36mâ•·[0m
[36mâ”œâ”€[0m [36mJUnit Jupiter[0m [32mâœ”[0m
[36mâ”‚  â””â”€[0m [36mBlackjackTest[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe isBlackjack method returns true with king and ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Split given ace-ace and dealer ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given two-nine and dealer queen[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Stand given king-seven and dealer ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given two-ten and dealer queen[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given two-ten and dealer seven[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Stand given king-ten and dealer ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given four-ten and dealer queen[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given four-ten and dealer seven[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe parseCard returns the correct numerical value for card name eight[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe parseCard returns the correct numerical value for card name queen[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe parseCard returns the correct numerical value for card name seven[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe parseCard returns the correct numerical value for card name three[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Stand given jack-jack and dealer ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given five-ten and dealer king[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Stand given eight-ten and dealer ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe isBlackjack method returns true with jack and ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given six-ten and dealer ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Stand given six-ten and dealer six[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Stand given three-ten and dealer six[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe isBlackjack method returns false with queen and jack[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given two-two and dealer ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Stand given ace-king and dealer queen[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given two-eight and dealer two[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Stand given king-king and dealer ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Stand given jack-ace and dealer ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given five-five and dealer ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe isBlackjack method returns false with king and five[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Stand given two-ten and dealer six[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given five-ten and dealer seven[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe isBlackjack method returns true with ten and ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given two-two and dealer five[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Stand given four-ten and dealer six[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe isBlackjack method returns false with ace and ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe parseCard returns the correct numerical value for card name ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe parseCard returns the correct numerical value for card name six[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe parseCard returns the correct numerical value for card name ten[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe parseCard returns the correct numerical value for card name two[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Stand given nine-ten and dealer ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Automatically Win given king-ace and deale...[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe isBlackjack method returns true with queen and ace[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe parseCard returns the correct numerical value for card name five[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe parseCard returns the correct numerical value for card name four[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe parseCard returns the correct numerical value for card name jack[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe parseCard returns the correct numerical value for card name king[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe parseCard returns the correct numerical value for card name nine[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given six-ten and dealer seven[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Automatically Win given ten-ace and dealer...[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Stand given five-ten and dealer six[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given two-three and dealer queen[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe isBlackjack method returns false with eight and five[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given three-ten and dealer queen[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe firstTurn method returns strategy Hit given three-ten and dealer seven[0m [32mâœ”[0m
[36mâ”‚     â”œâ”€[0m [34mThe isBlackjack method returns false with ace and five[0m [32mâœ”[0m
[36mâ”‚     â””â”€[0m [34mThe isBlackjack method returns false with ace and nine[0m [32mâœ”[0m
[36mâ”œâ”€[0m [36mJUnit Vintage[0m [32mâœ”[0m
[36mâ””â”€[0m [36mJUnit Platform Suite[0m [32mâœ”[0m

Test run finished after 8280 ms
[         4 containers found      ]
[         0 containers skipped    ]
[         4 containers started    ]
[         0 containers aborted    ]
[         4 containers successful ]
[         0 containers failed     ]
[        55 tests found           ]
[         0 tests skipped         ]
[        55 tests started         ]
[         0 tests aborted         ]
[        55 tests successful      ]
[         0 tests failed          ]


WARNING: Delegated to the 'execute' command.
         This behaviour has been deprecated and will be removed in a future release.
         Please use the 'execute' command directly.
	Command being timed: "java -cp .:junit-platform-console-standalone-1.10.0.jar:junit-jupiter-api-5.10.0.jar:junit-jupiter-engine-5.10.0.jar:junit-jupiter-params-5.10.0.jar:junit-4.13.2.jar:hamcrest-core-1.3.jar:assertj-core-3.24.2.jar org.junit.platform.console.ConsoleLauncher --class-path . --select-class BlackjackTest"
	User time (seconds): 7.04
	System time (seconds): 4.47
	Percent of CPU this job got: 34%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.76
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 104548
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 24637
	Voluntary context switches: 5085
	Involuntary context switches: 7467
	Swaps: 0
	File system inputs: 0
	File system outputs: 560
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0

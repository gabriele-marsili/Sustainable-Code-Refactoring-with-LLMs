{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":0,"numPassedTests":25,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":26,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1758208788253,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. zero","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"zero"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. arbitrary single byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"arbitrary single byte"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. largest single byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"largest single byte"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. smallest double byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"smallest double byte"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. arbitrary double byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"arbitrary double byte"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. largest double byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"largest double byte"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. smallest triple byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"smallest triple byte"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. arbitrary triple byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"arbitrary triple byte"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. largest triple byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"largest triple byte"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. smallest quadruple byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"smallest quadruple byte"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. arbitrary quadruple byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"arbitrary quadruple byte"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. largest quadruple byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"largest quadruple byte"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. smallest quintuple byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"smallest quintuple byte"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. arbitrary quintuple byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"arbitrary quintuple byte"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. maximum 32-bit integer input","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"maximum 32-bit integer input"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. two single-byte values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"two single-byte values"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. two multi-byte values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"two multi-byte values"},{"ancestorTitles":["VariableLengthQuantity","Encode a series of integers, producing a series of bytes."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Encode a series of integers, producing a series of bytes. many multi-byte values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"many multi-byte values"},{"ancestorTitles":["VariableLengthQuantity","Decode a series of bytes, producing a series of integers."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Decode a series of bytes, producing a series of integers. one byte","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"one byte"},{"ancestorTitles":["VariableLengthQuantity","Decode a series of bytes, producing a series of integers."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Decode a series of bytes, producing a series of integers. two bytes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"two bytes"},{"ancestorTitles":["VariableLengthQuantity","Decode a series of bytes, producing a series of integers."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Decode a series of bytes, producing a series of integers. three bytes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"three bytes"},{"ancestorTitles":["VariableLengthQuantity","Decode a series of bytes, producing a series of integers."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Decode a series of bytes, producing a series of integers. four bytes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"four bytes"},{"ancestorTitles":["VariableLengthQuantity","Decode a series of bytes, producing a series of integers."],"duration":3,"failureDetails":[{"matcherResult":{"actual":[-1],"expected":[4294967295],"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   4294967295,\n+   -1,\n  ]","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Array [\n-   4294967295,\n+   -1,\n  ]\n    at Object.<anonymous> (/app/variable-length-quantity.test.ts:98:58)\n    at Promise.then.completed (/base/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/base/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/base/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/base/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:121:9)\n    at run (/base/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/base/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/base/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"VariableLengthQuantity Decode a series of bytes, producing a series of integers. maximum 32-bit integer","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"maximum 32-bit integer"},{"ancestorTitles":["VariableLengthQuantity","Decode a series of bytes, producing a series of integers."],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Decode a series of bytes, producing a series of integers. incomplete sequence causes error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"incomplete sequence causes error"},{"ancestorTitles":["VariableLengthQuantity","Decode a series of bytes, producing a series of integers."],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Decode a series of bytes, producing a series of integers. incomplete sequence causes error, even if value is zero","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"incomplete sequence causes error, even if value is zero"},{"ancestorTitles":["VariableLengthQuantity","Decode a series of bytes, producing a series of integers."],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"VariableLengthQuantity Decode a series of bytes, producing a series of integers. multiple values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"multiple values"}],"endTime":1758208790871,"message":"  ● VariableLengthQuantity › Decode a series of bytes, producing a series of integers. › maximum 32-bit integer\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Array [\n    -   4294967295,\n    +   -1,\n      ]\n\n       96 |\n       97 |     it('maximum 32-bit integer', () => {\n    >  98 |       expect(VLQ.decode([0x8f, 0xff, 0xff, 0xff, 0x7f])).toEqual([0xffffffff])\n          |                                                          ^\n       99 |     })\n      100 |\n      101 |     it('incomplete sequence causes error', () => {\n\n      at Object.<anonymous> (variable-length-quantity.test.ts:98:58)\n","name":"/app/variable-length-quantity.test.ts","startTime":1758208788468,"status":"failed","summary":""}],"wasInterrupted":false}

{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":0,"numPassedTests":35,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":36,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1752751477233,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Addition"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Addition Add two positive rational numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Add two positive rational numbers"},{"ancestorTitles":["Addition"],"duration":31,"failureDetails":[],"failureMessages":[],"fullName":"Addition Add a positive rational number and a negative rational number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Add a positive rational number and a negative rational number"},{"ancestorTitles":["Addition"],"duration":64,"failureDetails":[],"failureMessages":[],"fullName":"Addition Add two negative rational numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Add two negative rational numbers"},{"ancestorTitles":["Addition"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Addition Add a rational number to its additive inverse","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Add a rational number to its additive inverse"},{"ancestorTitles":["Subtraction"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"Subtraction Subtract two positive rational numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Subtract two positive rational numbers"},{"ancestorTitles":["Subtraction"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Subtraction Subtract a positive rational number and a negative rational number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Subtract a positive rational number and a negative rational number"},{"ancestorTitles":["Subtraction"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Subtraction Subtract two negative rational numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Subtract two negative rational numbers"},{"ancestorTitles":["Subtraction"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Subtraction Subtract a rational number from itself","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Subtract a rational number from itself"},{"ancestorTitles":["Multiplication"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Multiplication Multiply two positive rational numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Multiply two positive rational numbers"},{"ancestorTitles":["Multiplication"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Multiplication Multiply a negative rational number by a positive rational number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Multiply a negative rational number by a positive rational number"},{"ancestorTitles":["Multiplication"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Multiplication Multiply two negative rational numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Multiply two negative rational numbers"},{"ancestorTitles":["Multiplication"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Multiplication Multiply a rational number by its reciprocal","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Multiply a rational number by its reciprocal"},{"ancestorTitles":["Multiplication"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Multiplication Multiply a rational number by 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Multiply a rational number by 1"},{"ancestorTitles":["Multiplication"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Multiplication Multiply a rational number by 0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Multiply a rational number by 0"},{"ancestorTitles":["Division"],"duration":30,"failureDetails":[],"failureMessages":[],"fullName":"Division Divide two positive rational numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Divide two positive rational numbers"},{"ancestorTitles":["Division"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Division Divide a positive rational number by a negative rational number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Divide a positive rational number by a negative rational number"},{"ancestorTitles":["Division"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Division Divide two negative rational numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Divide two negative rational numbers"},{"ancestorTitles":["Division"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Division Divide a rational number by 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Divide a rational number by 1"},{"ancestorTitles":["Absolute value"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"Absolute value Absolute value of a positive rational number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Absolute value of a positive rational number"},{"ancestorTitles":["Absolute value"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Absolute value Absolute value of a negative rational number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Absolute value of a negative rational number"},{"ancestorTitles":["Absolute value"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Absolute value Absolute value of zero","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Absolute value of zero"},{"ancestorTitles":["Exponentiation of a rational number"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"Exponentiation of a rational number Raise a positive rational number to a positive integer power","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Raise a positive rational number to a positive integer power"},{"ancestorTitles":["Exponentiation of a rational number"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Exponentiation of a rational number Raise a negative rational number to a positive integer power","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Raise a negative rational number to a positive integer power"},{"ancestorTitles":["Exponentiation of a rational number"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Exponentiation of a rational number Raise zero to an integer power","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Raise zero to an integer power"},{"ancestorTitles":["Exponentiation of a rational number"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"Exponentiation of a rational number Raise one to an integer power","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Raise one to an integer power"},{"ancestorTitles":["Exponentiation of a rational number"],"duration":31,"failureDetails":[],"failureMessages":[],"fullName":"Exponentiation of a rational number Raise a positive rational number to the power of zero","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Raise a positive rational number to the power of zero"},{"ancestorTitles":["Exponentiation of a rational number"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Exponentiation of a rational number Raise a negative rational number to the power of zero","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Raise a negative rational number to the power of zero"},{"ancestorTitles":["Exponentiation of a real number to a rational number"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Exponentiation of a real number to a rational number Raise a real number to a positive rational number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Raise a real number to a positive rational number"},{"ancestorTitles":["Exponentiation of a real number to a rational number"],"duration":106,"failureDetails":[{"matcherResult":{"actual":0.33333333333333337,"expected":0.3333333333333333,"message":"expect(received).toEqual(expected) // deep equality\n\nExpected: 0.3333333333333333\nReceived: 0.33333333333333337","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: 0.3333333333333333\nReceived: 0.33333333333333337\n    at Object.<anonymous> (/app/rational-numbers.test.ts:158:48)\n    at Promise.then.completed (/base/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/base/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/base/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/base/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:121:9)\n    at run (/base/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/base/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/base/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Exponentiation of a real number to a rational number Raise a real number to a negative rational number","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"Raise a real number to a negative rational number"},{"ancestorTitles":["Exponentiation of a real number to a rational number"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"Exponentiation of a real number to a rational number Raise a real number to a zero rational number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Raise a real number to a zero rational number"},{"ancestorTitles":["Reduction to lowest terms"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reduction to lowest terms Reduce a positive rational number to lowest terms","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reduce a positive rational number to lowest terms"},{"ancestorTitles":["Reduction to lowest terms"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Reduction to lowest terms Reduce a negative rational number to lowest terms","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reduce a negative rational number to lowest terms"},{"ancestorTitles":["Reduction to lowest terms"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Reduction to lowest terms Reduce a rational number with a negative denominator to lowest terms","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reduce a rational number with a negative denominator to lowest terms"},{"ancestorTitles":["Reduction to lowest terms"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Reduction to lowest terms Reduce zero to lowest terms","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reduce zero to lowest terms"},{"ancestorTitles":["Reduction to lowest terms"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Reduction to lowest terms Reduce an integer to lowest terms","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reduce an integer to lowest terms"},{"ancestorTitles":["Reduction to lowest terms"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Reduction to lowest terms Reduce one to lowest terms","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Reduce one to lowest terms"}],"endTime":1752751500840,"message":"  ● Exponentiation of a real number to a rational number › Raise a real number to a negative rational number\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: 0.3333333333333333\n    Received: 0.33333333333333337\n\n      156 |     it('Raise a real number to a negative rational number', () => {\n      157 |         const expected = 0.3333333333333333\n    > 158 |         expect(new Rational(-1, 2).expreal(9)).toEqual(expected)\n          |                                                ^\n      159 |     })\n      160 |\n      161 |     it('Raise a real number to a zero rational number', () => {\n\n      at Object.<anonymous> (rational-numbers.test.ts:158:48)\n","name":"/app/rational-numbers.test.ts","startTime":1752751478954,"status":"failed","summary":""}],"wasInterrupted":false}

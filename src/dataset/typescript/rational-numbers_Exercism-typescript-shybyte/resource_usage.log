FAIL ./rational-numbers.test.ts (21.886 s)
  Addition
    ✓ Add two positive rational numbers (27 ms)
    ✓ Add a positive rational number and a negative rational number (31 ms)
    ✓ Add two negative rational numbers (64 ms)
    ✓ Add a rational number to its additive inverse (4 ms)
  Subtraction
    ✓ Subtract two positive rational numbers (25 ms)
    ✓ Subtract a positive rational number and a negative rational number (5 ms)
    ✓ Subtract two negative rational numbers (1 ms)
    ✓ Subtract a rational number from itself (1 ms)
  Multiplication
    ✓ Multiply two positive rational numbers (27 ms)
    ✓ Multiply a negative rational number by a positive rational number (3 ms)
    ✓ Multiply two negative rational numbers (3 ms)
    ✓ Multiply a rational number by its reciprocal (2 ms)
    ✓ Multiply a rational number by 1 (11 ms)
    ✓ Multiply a rational number by 0 (2 ms)
  Division
    ✓ Divide two positive rational numbers (30 ms)
    ✓ Divide a positive rational number by a negative rational number (2 ms)
    ✓ Divide two negative rational numbers (1 ms)
    ✓ Divide a rational number by 1 (2 ms)
  Absolute value
    ✓ Absolute value of a positive rational number (12 ms)
    ✓ Absolute value of a negative rational number (1 ms)
    ✓ Absolute value of zero (4 ms)
  Exponentiation of a rational number
    ✓ Raise a positive rational number to a positive integer power (14 ms)
    ✓ Raise a negative rational number to a positive integer power (2 ms)
    ✓ Raise zero to an integer power (3 ms)
    ✓ Raise one to an integer power (24 ms)
    ✓ Raise a positive rational number to the power of zero (31 ms)
    ✓ Raise a negative rational number to the power of zero
  Exponentiation of a real number to a rational number
    ✓ Raise a real number to a positive rational number (1 ms)
    ✕ Raise a real number to a negative rational number (106 ms)
    ✓ Raise a real number to a zero rational number (13 ms)
  Reduction to lowest terms
    ✓ Reduce a positive rational number to lowest terms (2 ms)
    ✓ Reduce a negative rational number to lowest terms (1 ms)
    ✓ Reduce a rational number with a negative denominator to lowest terms (6 ms)
    ✓ Reduce zero to lowest terms
    ✓ Reduce an integer to lowest terms (2 ms)
    ✓ Reduce one to lowest terms (3 ms)

  ● Exponentiation of a real number to a rational number › Raise a real number to a negative rational number

    expect(received).toEqual(expected) // deep equality

    Expected: 0.3333333333333333
    Received: 0.33333333333333337

      156 |     it('Raise a real number to a negative rational number', () => {
      157 |         const expected = 0.3333333333333333
    > 158 |         expect(new Rational(-1, 2).expreal(9)).toEqual(expected)
          |                                                ^
      159 |     })
      160 |
      161 |     it('Raise a real number to a zero rational number', () => {

      at Object.<anonymous> (rational-numbers.test.ts:158:48)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 35 passed, 36 total
Snapshots:   0 total
Time:        23.875 s
Ran all test suites.
Test results written to: output.log
Command exited with non-zero status 1
	Command being timed: "npx jest --json --outputFile=output.log"
	User time (seconds): 8.64
	System time (seconds): 3.98
	Percent of CPU this job got: 38%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.10
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 221584
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 64511
	Voluntary context switches: 1983
	Involuntary context switches: 7035
	Swaps: 0
	File system inputs: 0
	File system outputs: 160
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 1

{"numFailedTestSuites":1,"numFailedTests":6,"numPassedTestSuites":0,"numPassedTests":7,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":13,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1758305963170,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["run-length encode a string"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"run-length encode a string empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"empty string"},{"ancestorTitles":["run-length encode a string"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"1X1Y1Z","expected":"XYZ","message":"expect(received).toEqual(expected) // deep equality\n\nExpected: \"XYZ\"\nReceived: \"1X1Y1Z\"","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: \"XYZ\"\nReceived: \"1X1Y1Z\"\n    at Object.<anonymous> (/app/run-length-encoding.test.ts:11:27)\n    at Promise.then.completed (/base/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/base/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/base/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/base/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:121:9)\n    at run (/base/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/base/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/base/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"run-length encode a string single characters only are encoded without count","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"single characters only are encoded without count"},{"ancestorTitles":["run-length encode a string"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"run-length encode a string string with no single characters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"string with no single characters"},{"ancestorTitles":["run-length encode a string"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"12W1B12W3B24W1B","expected":"12WB12W3B24WB","message":"expect(received).toEqual(expected) // deep equality\n\nExpected: \"12WB12W3B24WB\"\nReceived: \"12W1B12W3B24W1B\"","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: \"12WB12W3B24WB\"\nReceived: \"12W1B12W3B24W1B\"\n    at Object.<anonymous> (/app/run-length-encoding.test.ts:23:7)\n    at Promise.then.completed (/base/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/base/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/base/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/base/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:121:9)\n    at run (/base/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/base/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/base/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"run-length encode a string single characters mixed with repeated characters","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"single characters mixed with repeated characters"},{"ancestorTitles":["run-length encode a string"],"duration":0,"failureDetails":[{"matcherResult":{"actual":"2 1h1s2q1 1q2w2 ","expected":"2 hs2q q2w2 ","message":"expect(received).toEqual(expected) // deep equality\n\nExpected: \"2 hs2q q2w2 \"\nReceived: \"2 1h1s2q1 1q2w2 \"","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: \"2 hs2q q2w2 \"\nReceived: \"2 1h1s2q1 1q2w2 \"\n    at Object.<anonymous> (/app/run-length-encoding.test.ts:28:36)\n    at Promise.then.completed (/base/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/base/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/base/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/base/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:121:9)\n    at run (/base/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/base/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/base/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"run-length encode a string multiple whitespace mixed in string","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"multiple whitespace mixed in string"},{"ancestorTitles":["run-length encode a string"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"run-length encode a string lowercase characters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"lowercase characters"},{"ancestorTitles":["run-length decode a string"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"run-length decode a string empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"empty string"},{"ancestorTitles":["run-length decode a string"],"duration":0,"failureDetails":[{"matcherResult":{"actual":"","expected":"XYZ","message":"expect(received).toEqual(expected) // deep equality\n\nExpected: \"XYZ\"\nReceived: \"\"","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: \"XYZ\"\nReceived: \"\"\n    at Object.<anonymous> (/app/run-length-encoding.test.ts:45:27)\n    at Promise.then.completed (/base/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/base/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/base/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/base/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:121:9)\n    at run (/base/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/base/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/base/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"run-length decode a string single characters only","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"single characters only"},{"ancestorTitles":["run-length decode a string"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"run-length decode a string string with no single characters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"string with no single characters"},{"ancestorTitles":["run-length decode a string"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"WWWWWWWWWWWWWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWW","expected":"WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWB","message":"expect(received).toEqual(expected) // deep equality\n\nExpected: \"WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWB\"\nReceived: \"WWWWWWWWWWWWWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWW\"","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: \"WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWB\"\nReceived: \"WWWWWWWWWWWWWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWW\"\n    at Object.<anonymous> (/app/run-length-encoding.test.ts:55:37)\n    at Promise.then.completed (/base/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/base/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/base/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/base/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:121:9)\n    at run (/base/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/base/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/base/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"run-length decode a string single characters with repeated characters","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"single characters with repeated characters"},{"ancestorTitles":["run-length decode a string"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"  qqww  ","expected":"  hsqq qww  ","message":"expect(received).toEqual(expected) // deep equality\n\nExpected: \"  hsqq qww  \"\nReceived: \"  qqww  \"","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: \"  hsqq qww  \"\nReceived: \"  qqww  \"\n    at Object.<anonymous> (/app/run-length-encoding.test.ts:60:36)\n    at Promise.then.completed (/base/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/base/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/base/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/base/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:121:9)\n    at run (/base/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/base/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/base/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"run-length decode a string multiple whitespace mixed in string","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"multiple whitespace mixed in string"},{"ancestorTitles":["run-length decode a string"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"run-length decode a string lower case string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"lower case string"},{"ancestorTitles":["encode and then decode"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"encode and then decode encode followed by decode gives original string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"encode followed by decode gives original string"}],"endTime":1758305964775,"message":"  ● run-length encode a string › single characters only are encoded without count\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: \"XYZ\"\n    Received: \"1X1Y1Z\"\n\n       9 |   it('single characters only are encoded without count', () => {\n      10 |     const expected = 'XYZ'\n    > 11 |     expect(encode('XYZ')).toEqual(expected)\n         |                           ^\n      12 |   })\n      13 |\n      14 |   it('string with no single characters', () => {\n\n      at Object.<anonymous> (run-length-encoding.test.ts:11:27)\n\n  ● run-length encode a string › single characters mixed with repeated characters\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: \"12WB12W3B24WB\"\n    Received: \"12W1B12W3B24W1B\"\n\n      21 |     expect(\n      22 |       encode('WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWB')\n    > 23 |     ).toEqual(expected)\n         |       ^\n      24 |   })\n      25 |\n      26 |   it('multiple whitespace mixed in string', () => {\n\n      at Object.<anonymous> (run-length-encoding.test.ts:23:7)\n\n  ● run-length encode a string › multiple whitespace mixed in string\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: \"2 hs2q q2w2 \"\n    Received: \"2 1h1s2q1 1q2w2 \"\n\n      26 |   it('multiple whitespace mixed in string', () => {\n      27 |     const expected = '2 hs2q q2w2 '\n    > 28 |     expect(encode('  hsqq qww  ')).toEqual(expected)\n         |                                    ^\n      29 |   })\n      30 |\n      31 |   it('lowercase characters', () => {\n\n      at Object.<anonymous> (run-length-encoding.test.ts:28:36)\n\n  ● run-length decode a string › single characters only\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: \"XYZ\"\n    Received: \"\"\n\n      43 |   it('single characters only', () => {\n      44 |     const expected = 'XYZ'\n    > 45 |     expect(decode('XYZ')).toEqual(expected)\n         |                           ^\n      46 |   })\n      47 |\n      48 |   it('string with no single characters', () => {\n\n      at Object.<anonymous> (run-length-encoding.test.ts:45:27)\n\n  ● run-length decode a string › single characters with repeated characters\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: \"WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWB\"\n    Received: \"WWWWWWWWWWWWWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWW\"\n\n      53 |   it('single characters with repeated characters', () => {\n      54 |     const expected = 'WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWB'\n    > 55 |     expect(decode('12WB12W3B24WB')).toEqual(expected)\n         |                                     ^\n      56 |   })\n      57 |\n      58 |   it('multiple whitespace mixed in string', () => {\n\n      at Object.<anonymous> (run-length-encoding.test.ts:55:37)\n\n  ● run-length decode a string › multiple whitespace mixed in string\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: \"  hsqq qww  \"\n    Received: \"  qqww  \"\n\n      58 |   it('multiple whitespace mixed in string', () => {\n      59 |     const expected = '  hsqq qww  '\n    > 60 |     expect(decode('2 hs2q q2w2 ')).toEqual(expected)\n         |                                    ^\n      61 |   })\n      62 |\n      63 |   it('lower case string', () => {\n\n      at Object.<anonymous> (run-length-encoding.test.ts:60:36)\n","name":"/app/run-length-encoding.test.ts","startTime":1758305963389,"status":"failed","summary":""}],"wasInterrupted":false}

{"numFailedTestSuites":1,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":5,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":7,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1758304972886,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Acronym are produced from"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Acronym are produced from title cased phrases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"title cased phrases"},{"ancestorTitles":["Acronym are produced from"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Acronym are produced from other title cased phrases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"other title cased phrases"},{"ancestorTitles":["Acronym are produced from"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"BRB","expected":"ÜR","message":"expect(received).toEqual(expected) // deep equality\n\nExpected: \"ÜR\"\nReceived: \"BRB\"","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: \"ÜR\"\nReceived: \"BRB\"\n    at Object.<anonymous> (/app/acronym.test.ts:13:40)\n    at Promise.then.completed (/base/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/base/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/base/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/base/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:121:9)\n    at run (/base/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/base/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/base/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Acronym are produced from umlauts","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"umlauts"},{"ancestorTitles":["Acronym are produced from"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Acronym are produced from inconsistently cased phrases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"inconsistently cased phrases"},{"ancestorTitles":["Acronym are produced from"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Acronym are produced from phrases with punctuation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"phrases with punctuation"},{"ancestorTitles":["Acronym are produced from"],"duration":0,"failureDetails":[{"matcherResult":{"actual":"PHPHP","expected":"PHP","message":"expect(received).toEqual(expected) // deep equality\n\nExpected: \"PHP\"\nReceived: \"PHPHP\"","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: \"PHP\"\nReceived: \"PHPHP\"\n    at Object.<anonymous> (/app/acronym.test.ts:25:58)\n    at Promise.then.completed (/base/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/base/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/base/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/base/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/base/node_modules/jest-circus/build/run.js:121:9)\n    at run (/base/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/base/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/base/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/base/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"Acronym are produced from other phrases with punctuation","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"other phrases with punctuation"},{"ancestorTitles":["Acronym are produced from"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Acronym are produced from phrases with punctuation and sentence casing","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"phrases with punctuation and sentence casing"}],"endTime":1758304974156,"message":"  ● Acronym are produced from › umlauts\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: \"ÜR\"\n    Received: \"BRB\"\n\n      11 |\n      12 |   it('umlauts', () => {\n    > 13 |     expect(Acronym.parse('Über Rübe')).toEqual('ÜR')\n         |                                        ^\n      14 |   })\n      15 |\n      16 |   it('inconsistently cased phrases', () => {\n\n      at Object.<anonymous> (acronym.test.ts:13:40)\n\n  ● Acronym are produced from › other phrases with punctuation\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: \"PHP\"\n    Received: \"PHPHP\"\n\n      23 |\n      24 |   it('other phrases with punctuation', () => {\n    > 25 |     expect(Acronym.parse('PHP: Hypertext Preprocessor')).toEqual('PHP')\n         |                                                          ^\n      26 |   })\n      27 |\n      28 |   it('phrases with punctuation and sentence casing', () => {\n\n      at Object.<anonymous> (acronym.test.ts:25:58)\n","name":"/app/acronym.test.ts","startTime":1758304973023,"status":"failed","summary":""}],"wasInterrupted":false}

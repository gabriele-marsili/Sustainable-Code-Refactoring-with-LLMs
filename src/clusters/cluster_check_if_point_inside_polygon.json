{
    "python": [
        {
            "id": "check_if_point_inside_polygon_236",
            "filename": "check_if_point_inside_polygon.py",
            "language": "python",
            "source": "mtrajk_coding_problems",
            "codeSnippetFilePath": "python/check_if_point_inside_polygon/check_if_point_inside_polygon.py",
            "testUnitFilePath": "python/check_if_point_inside_polygon/check_if_point_inside_polygon_testSuite.py",
            "downloadDate": "2025-06-04 19:56:42",
            "characterQuantity": 2495,
            "wordQuantity": 404,
            "licenseType": "MIT",
            "LLMs": [
                {
                    "type": "openAI",
                    "path": "/Users/piccoletto/Desktop/Everything/pisa/tesi/Sustainable-Code-Refactoring-with-LLMs/src/dataset/python/check_if_point_inside_polygon/openAI/ChatGPT4_check_if_point_inside_polygon_v4.py",
                    "word_quantity": 49,
                    "char_quantity": 363,
                    "filename": "ChatGPT4_check_if_point_inside_polygon_v4.py"
                },
                {
                    "type": "openAI",
                    "path": "/Users/piccoletto/Desktop/Everything/pisa/tesi/Sustainable-Code-Refactoring-with-LLMs/src/dataset/python/check_if_point_inside_polygon/openAI/ChatGPT4_check_if_point_inside_polygon_v1.py",
                    "word_quantity": 49,
                    "char_quantity": 363,
                    "filename": "ChatGPT4_check_if_point_inside_polygon_v1.py"
                },
                {
                    "type": "openAI",
                    "path": "/Users/piccoletto/Desktop/Everything/pisa/tesi/Sustainable-Code-Refactoring-with-LLMs/src/dataset/python/check_if_point_inside_polygon/openAI/ChatGPT4_check_if_point_inside_polygon_v2.py",
                    "word_quantity": 47,
                    "char_quantity": 436,
                    "filename": "ChatGPT4_check_if_point_inside_polygon_v2.py"
                },
                {
                    "type": "openAI",
                    "path": "/Users/piccoletto/Desktop/Everything/pisa/tesi/Sustainable-Code-Refactoring-with-LLMs/src/dataset/python/check_if_point_inside_polygon/openAI/ChatGPT4_check_if_point_inside_polygon_v3.py",
                    "word_quantity": 49,
                    "char_quantity": 350,
                    "filename": "ChatGPT4_check_if_point_inside_polygon_v3.py"
                },
                {
                    "type": "claude",
                    "path": "/Users/piccoletto/Desktop/Everything/pisa/tesi/Sustainable-Code-Refactoring-with-LLMs/src/dataset/python/check_if_point_inside_polygon/claude/ClaudeSonnet4_check_if_point_inside_polygon_v2.py",
                    "word_quantity": 222,
                    "char_quantity": 1417,
                    "filename": "ClaudeSonnet4_check_if_point_inside_polygon_v2.py"
                },
                {
                    "type": "claude",
                    "path": "/Users/piccoletto/Desktop/Everything/pisa/tesi/Sustainable-Code-Refactoring-with-LLMs/src/dataset/python/check_if_point_inside_polygon/claude/ClaudeSonnet4_check_if_point_inside_polygon_v3.py",
                    "word_quantity": 219,
                    "char_quantity": 1448,
                    "filename": "ClaudeSonnet4_check_if_point_inside_polygon_v3.py"
                },
                {
                    "type": "claude",
                    "path": "/Users/piccoletto/Desktop/Everything/pisa/tesi/Sustainable-Code-Refactoring-with-LLMs/src/dataset/python/check_if_point_inside_polygon/claude/ClaudeSonnet4_check_if_point_inside_polygon_v4.py",
                    "word_quantity": 84,
                    "char_quantity": 567,
                    "filename": "ClaudeSonnet4_check_if_point_inside_polygon_v4.py"
                },
                {
                    "type": "claude",
                    "path": "/Users/piccoletto/Desktop/Everything/pisa/tesi/Sustainable-Code-Refactoring-with-LLMs/src/dataset/python/check_if_point_inside_polygon/claude/ClaudeSonnet4_check_if_point_inside_polygon_v1.py",
                    "word_quantity": 219,
                    "char_quantity": 1448,
                    "filename": "ClaudeSonnet4_check_if_point_inside_polygon_v1.py"
                },
                {
                    "type": "gemini",
                    "path": "/Users/piccoletto/Desktop/Everything/pisa/tesi/Sustainable-Code-Refactoring-with-LLMs/src/dataset/python/check_if_point_inside_polygon/gemini/GeminiFlash_check_if_point_inside_polygon_v4.py",
                    "word_quantity": 185,
                    "char_quantity": 1185,
                    "filename": "GeminiFlash_check_if_point_inside_polygon_v4.py"
                },
                {
                    "type": "gemini",
                    "path": "/Users/piccoletto/Desktop/Everything/pisa/tesi/Sustainable-Code-Refactoring-with-LLMs/src/dataset/python/check_if_point_inside_polygon/gemini/GeminiFlash_check_if_point_inside_polygon_v1.py",
                    "word_quantity": 192,
                    "char_quantity": 1200,
                    "filename": "GeminiFlash_check_if_point_inside_polygon_v1.py"
                },
                {
                    "type": "gemini",
                    "path": "/Users/piccoletto/Desktop/Everything/pisa/tesi/Sustainable-Code-Refactoring-with-LLMs/src/dataset/python/check_if_point_inside_polygon/gemini/GeminiFlash_check_if_point_inside_polygon_v2.py",
                    "word_quantity": 217,
                    "char_quantity": 1335,
                    "filename": "GeminiFlash_check_if_point_inside_polygon_v2.py"
                },
                {
                    "type": "gemini",
                    "path": "/Users/piccoletto/Desktop/Everything/pisa/tesi/Sustainable-Code-Refactoring-with-LLMs/src/dataset/python/check_if_point_inside_polygon/gemini/GeminiFlash_check_if_point_inside_polygon_v3.py",
                    "word_quantity": 217,
                    "char_quantity": 1335,
                    "filename": "GeminiFlash_check_if_point_inside_polygon_v3.py"
                }
            ]
        }
    ]
}